[{"title":"2017-岂止于心","date":"2017-02-10T04:20:25.000Z","path":"2017/02/10/books/","text":"16年毕业后,工作到现在也已经一年有余,从一个不懂世俗的单纯小子到步入职场的小骚年,身份却没有来的及转换过来,导致16年生活,工作安排的混乱不堪,幸得公司年假放了20天有余,得以在这些天内,沉静下来,理清现状,思考如何改变。所以,2017年有了下列计划: 读书,填充头脑 解忧杂货铺 【东野圭吾】 白夜行 【东野圭吾】 猫鼠游戏 [弗兰克·W·阿巴格内尔/斯坦·雷丁(著)] ReactNative跨平台移动应用开发 【阙喜涛】 世界上的另一个你全集 平凡的世界 人生 【路遥】 与时间做朋友 【李笑来】 深入React技术栈 【陈屹】 Js函数式编程 三体全集(ing)[刘慈欣] 我们仨 无声告白 人类简史:从动物到上帝 岛上书店 如何闻读一本书 总控力 查令十字街84号 嫌疑人X的现身 追风筝的人 牛奶可乐经济学 最好的我们 天才在左疯子在右 把你的英语用起来 把时间当朋友 围城 乌合之众 跟任何人都能聊得来 耶路撒冷三千年 偷影子的人 苏菲的世界 了不起的盖茨比 不速之客的自助餐 活着 当我跑步时,我谈些什么 时间简史(插图版) 金瓶梅 魔鬼经济学: 揭示隐藏在表象之下的真实世界 必然 影响力 一直特立独行的猪 局外人 目送 秘密 悟空传 拖延心理学 经济学通识 像TED一样演讲 我讲个笑话,你可别哭啊 1984 爱你就像爱生命 你只是看起来很努力 上述52本书籍,挑选了来自于Kindle2016Top100里面的其中一部分,其中包含了,技术,文学,经济,心理,科技等多个种类的书籍,幸好我对于书籍没有抵触心理,在过年的那段时间内,我陆续读完了5本书,这也培养了我在空闲时间内去读书的习惯,也一定要继续坚持下去,争取年内把这些书都读完。 备注: 中划线的是看完的,其余的按照心情选择阅读。 画画虽然那么喜欢油彩画,但是在考虑学习成本,空间,时间后,选择以色铅简笔画为基础,培养兴趣的学习绘画,已达到静心养性的最高心里境界吧。罗列两三本正在学的简笔画书籍,有兴趣的可以一块学,一块交流,后期附上我的作品啦,哈哈哈 色铅笔技法从入门到精通 色铅笔手绘纯美人像 Free在懒散之余,练习硬笔书法,魔方,瑜伽。后期会附上我的魔方教学帖子,供以后回忆~~ 总结总的来说,新的一年,总是要努力一下,与其碌碌无为,不如平心而为,做些有趣的事情,提升自己。毕竟,我和小米都:永远相信美好的事情，即将发生。 一生最重 不过饱餐与被爱","tags":[{"name":"Book","slug":"Book","permalink":"http://www.luojh.me/tags/Book/"}]},{"title":"Hexo搭建个人博客","date":"2017-02-08T04:20:25.000Z","path":"2017/02/08/FirstArticle/","text":"过完新年,在公司闲来无事,便索性想搭建自己的博客系统,其实这个想法很早就有了,不过16年太过于忙碌,生活工作节奏太乱,没有好好沉静,反思和沉淀。所以,在花费了几个小时,陆续踩了好多坑后,博客终于可以访问了。谨以此文献给想要搭建博客的同志们。 一生最重 不过饱餐与被爱","tags":[{"name":"Blog","slug":"Blog","permalink":"http://www.luojh.me/tags/Blog/"},{"name":"Personal","slug":"Personal","permalink":"http://www.luojh.me/tags/Personal/"},{"name":"教程","slug":"教程","permalink":"http://www.luojh.me/tags/教程/"}]},{"title":"LDialog-强大的jquery弹窗插件","date":"2016-06-06T04:20:25.000Z","path":"2016/06/06/ldialog/","text":"前一阵子基于jquery开发,项目中遇到了大量的弹窗组件,每个都是重复复制。最近闲下来了,便花费了几天时间,写了此蒙版插件。基于jquery开发，能够适用于所有的弹出对话，弹出，确认，tip，msg提示框等。支持ie9+以及其他新款浏览器。 How to install npm 1npm install --save-dev ldialog bower 1bower install --save-dev ldialog How to use 在头部引入ldialog.css或者压缩过的ldialog.min.css文件,**同时将fonts字体图标文件放置在css同级目录中。 1&lt;link rel=&quot;stylesheet&quot; href=&quot;../css/ldialog.css&quot;/&gt; 引入jquery以及ldialog.js文件： 12&lt;script src=&quot;../js/jquery.min.js&quot;&gt;&lt;/script&gt;&lt;script src=&quot;../js/ldialog.js&quot;&gt;&lt;/script&gt; 当在监听事件中需要弹出对话框或蒙版时，实例化一个蒙版，并初始化,例如： 12var dialog = new LDialog(&quot;test2&quot;);dialog.init(); 就是这么简单,可能有同学想说,为什么创建一个蒙版还是有些麻烦,其实后面还有通过方法创建蒙版,请接着看完文档哦。 LDialog参数说明 new LDialog（arg1, arg2, arg3）可以传入（选填）三个参数： arg1 (字符串) 参数名 数据类型 默认值 描述 备注 arg1 String null 重写蒙版显示内容 可以是纯文本，也可以是html代码 arg2 (对象) 参数名 数据类型 默认值 描述 备注 bg String “” 定义蒙版背景颜色，默认为白色背景 btn Obj { } 定义按钮组 可定义两个按钮，对应的参数是：sure和cancel sure 定义确定按钮样式，值既可以引用已写好的class，也可以为按钮的颜色值；若只需要其中某一个按钮，只定义一个即可 例如：sure: “l-btn-default” 或者 sure: “red” cancel 定义取消按钮样式，用法和sure相同 例如：cancel: “l-btn-default” 或者 cancel: “#eeeeee” cancelTitle String “取消” 重写蒙版底部取消按钮显示文字 sureTitle String “确定” 重写蒙版底部确定按钮显示文字 enterAni String “fadeIn” 定义蒙版进入动画 可自定义引入animate.css动画库的动画class，插件预加载了常用的几种动画 fontColor String “” 定义蒙版字体颜色 footer boolean true 定义蒙版底部按钮组框架是否显示 globalClose boolean false 定义蒙版是否全局关闭 点击蒙版以外区域关闭蒙版 header boolean true 定义蒙版标题模块是否显示 icon boolean true 定义蒙版内容块图标是否显示 iconColor String null 定义内容块左边图标大小 iconData String null 定义图标源 若arg3参数也定义此参数，以arg2参数定义为准 iconSize String null 定义内容块左边图标大小 minHeight String “50px” 定义蒙版最低高度 move boolean true 定义蒙版是否支持拖拽 moveType Number 1 定义蒙版拖拽方式，可选1或者2 1代表经典方式，2代表黑框方式 moveOut boolean false 定义蒙版是否可以拖拽出显示区域 默认不可以 onCancel function null 点击取消按钮的回调函数 onClose function null 点击关闭按钮的回调函数 onGClose function null 点击全局关闭回调函数 onIsNull(posi,i) function true input输入框回调函数,参数posi为当前input的选择器，i代表此input的序号，函数默认返回true onSure(data) function null 点击确定按钮的回调函数,可选data参数，获得所有蒙版input输入框的中的值，以数组形式展现 onSureBefore function null 点击确定按钮前执行的回调函数 和onSure相比，此函数执行时动画效果还未执行 onTimeOut function null 倒计时完毕后的回调函数 opacity Number 0.5 定义蒙版透明度 outline boolean false 定义是否显示outline效果 类似facebook蒙版效果,常用于操作成功的提示信息 radius Strig “2px” 定义蒙版的圆角 shadow String “” 定义蒙版阴影 subtitle String null 定义副标题内容 timeOut Number -1 定义蒙版显示多长时间后消失 默认使用-1代表不消失 title String “初始化标题” 定义蒙版标题 若arg3参数也定义此参数，以arg2参数定义为准 verCenter boolean true 定义蒙版是否居中显示 默认居中，当不居中时，默认距顶部40px width String “450px” 定义蒙版宽度 input Array [ ] 定义输入框组 可配置多个输入框组，参数如下： verCenter 默认：false 输入框组居中显示，设置为真时，leftInfo参数不可用 value 默认：”” 输入框组设定value值 placeH 默认：”” 默认input显示内容 maxlength 默认：”” 输入最多长度字符数 type 默认：”text” 设置输入类型，例如：text，textarea，date， email… notNull 默认：false 设置是否为空 leftInfo 默认：”” 设置input左边文字 说明： 内容左边引用的是字体图标，属性是iconData，插件默认引用了52个常用的字体图标，下面有预览入口，用法如图： 进入查看图片：传送门 arg3(对象、字符串)已经预定义了几组类型的蒙版显示效果，分别是： info、 success 、error 、 confirm 、 input 、 bim、 custom 当使用时，直接赋值给arg3参数相应的字符串即可。 具体形式如下： 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758var popType = &#123; info: &#123; title: &quot;信息&quot;, btn: &#123; sure: &quot;l-btn-info&quot;, cancel: &quot;l-btn-default&quot; &#125;, iconData: &quot;&quot; &#125;, success: &#123; title: &quot;成功&quot;, btn: &#123; sure: &quot;l-btn-success&quot;, cancel: &quot;l-btn-default&quot; &#125;, iconData: &quot;&quot;, iconColor: &quot;#56BD9D&quot; &#125;, error: &#123; title: &quot;错误&quot;, btn: &#123; sure: &quot;l-btn-error&quot;, cancel: &quot;l-btn-default&quot; &#125;, iconData: &quot;&quot;, iconColor: &quot;#c9302c&quot; &#125;, confirm: &#123; title: &quot;提示&quot;, btn: &#123; sure: &quot;l-btn-warning&quot;, cancel: &quot;l-btn-default&quot; &#125;, iconData: &quot;&quot;, iconColor: &quot;#F0AD4E&quot; &#125;, input: &#123; title: &quot;输入&quot;, btn: &#123; sure: &quot;l-btn-primary&quot;, cancel: &quot;l-btn-default&quot; &#125; &#125;, bim: &#123; title: &quot;提示&quot;, btn: &#123; sure: &quot;l-btn-bim&quot;, cancel: &quot;l-btn-default&quot; &#125; &#125;, custom: &#123; title: &quot;初始化标题&quot;, btn: &#123; sure: &quot;l-btn-primary&quot;, cancel: &quot;l-btn-default&quot; &#125; &#125;&#125;; 按钮组预定了6组： l-btn-default 、 l-btn-primary 、 l-btn-error 、 l-btn-success 、 l-btn-info、 l-btn-warning 样式可在底部demo页面中查看 方法 LDialog.prompt(value, con, fun) 弹出类似系统的prompt对话框，默认含有一个input输入框。 value：必填，显示的文字，可以为空。con： 选填，配置样式，可使用插件arg2的参数fun： 选填，确认按钮的回调函数，用来获得数据，处理数据 example： 1234567891011121314151617181920var con = &#123; input: [&#123; type: &quot;textarea&quot; &#125;], width: &quot;400px&quot;, onIsNull: function(position, i) &#123; if(position.val() === &quot;&quot;) &#123; position.focus(); LDialog.tips(&quot;请输入正确的值,&quot;,position, &#123;posi: 2&#125;); return false; &#125; return true; &#125;&#125;;LDialog.prompt(&quot;&quot;, con, function(v) &#123; if(v[0] !== &quot;&quot;) &#123; LDialog.closeAllTips(); console.log(v); &#125;&#125;); LDialog.alert(value, con, fun) example: 12345LDialog.alert(&quot;123123123123123&quot;);LDialog.alert(&quot;123123123123123&quot;, function() &#123; console.log(&quot;点击确定按钮了！&quot;);&#125;); 和prompt方法使用相同，但是alert只有确定按钮，没有input输入框。 LDialog.confirm(value, con, fun) example: 123LDialog.confirm(value, &#123;iconData: &quot;&quot;&#125;, function() &#123; LDialog.msg(&quot;删除成功！&quot;, &#123;iconData: &quot;&quot;, iconColor: &quot;green&quot;, iconSize: &quot;30px&quot;&#125;);&#125;); 和prompt方法使用相同，但是confirm没有input输入框。 LDialog.msg(value, con, fun) value：必填，显示的文字，可以为空。con： 选填，配置样式，可使用插件arg2的参数fun： 选填，倒计时过后的回调函数，用来阻断函数执行。 example: 1234 LDialog.msg(&quot;删除成功！&quot;, &#123;iconData: &quot;&quot;&#125;, function() &#123; console.log(123); &#125;);` LDialog.tip(value, con, fun) 和msg方法使用相同，但样式不同。 LDialog.tips(value, selector, con) value：必填，显示的文字，可以为空。selector： 必填，显示tips出现的位置，可以为任意jquery的选择器。con： 选填，用来配置tips显示效果，具体参数如下： posi: 2, //默认显示在选择器的右边位置，可定义分别对应的位置： 1：上， 2： 右， 3： 下， 4： 左 bg: &quot;#000&quot;, //定义tips背景色，默认为黑色 color: &quot;#fff&quot;, //定义tips文字颜色，默认为白色 maxWidth: &quot;150&quot;, //定义tips最大宽度，默认为150px timeOut: 2000, //定义tips多少秒后消失。 tipsClose: $.noop //定义tips倒计时回调函数 Live Demo插件demo：传送门 字体图标： 传送门 git地址： 传送门 ###版本 Version 1.0.0 ：完成蒙版基础功能。 Version 1.0.1 ：增加蒙版居中、全局关闭、自定义进入动画、outline功能。 Version 1.0.2 ：增加对sea.js的支持。 Version 1.0.3 ：增加蒙版实时居中，增加蒙版多种拖拽方式的功能。 Version 1.0.4 ：增加了tip，confirm，msg，prompt，的插件方法，能够快速创建蒙版，并执行回调。 Version 1.0.5 ：修改了一些bug，增加tips指示框方法，能够快速定位到想要出现的位置。 一生最重 不过饱餐与被爱","tags":[{"name":"jquery","slug":"jquery","permalink":"http://www.luojh.me/tags/jquery/"},{"name":"ldialog","slug":"ldialog","permalink":"http://www.luojh.me/tags/ldialog/"},{"name":"model","slug":"model","permalink":"http://www.luojh.me/tags/model/"}]},{"title":"利用css3画各种几何图形(-)","date":"2016-03-10T08:20:25.000Z","path":"2016/03/10/css/index/","text":".main { margin: 20px; } .inline { display: inline-block; margin-left: 20px; vertical-align: middle; } .rectangle { width: 100px; height: 80px; background-color: #669; } .trapezoid { border-bottom: 50px solid #669; border-left: 25px solid transparent; border-right: 25px solid transparent; width: 80px; } .parallelogram { width: 80px; height: 50px; -webkit-transform: skew(-20deg); -moz-transform: skew(-20deg); -o-transform: skew(-20deg); background: #669; } .triangle-up { display: inline-block; border-width: 0px 30px 50px 30px; border-color: transparent transparent #669 transparent; border-style: solid; } .triangle-bottom { display: inline-block; border-width: 50px 30px 0px 30px; border-color: #669 transparent transparent transparent; border-style: solid; } .triangle-left { display: inline-block; border-width: 30px 50px 30px 0px; border-color: transparent #669 transparent transparent; border-style: solid; } .triangle-right { display: inline-block; border-width: 30px 0px 30px 50px; border-color: transparent transparent transparent #669; border-style: solid; } .triangle-updown { width: 0; height: 0; border-left: 46px solid transparent; border-right: 46px solid transparent; border-bottom: 60px solid #669; position: relative; } .triangle-updown:after { content: \" \"; width: 0; height: 0; border-left: 46px solid transparent; border-right: 46px solid transparent; border-top: 60px solid #669; position: absolute; top: 20px; left: -45px; } .triangle-topleft { width: 0; height: 0; border-top: 50px solid #669; border-right: 50px solid transparent; } .triangle-topright { width: 0; height: 0; border-top: 50px solid #669; border-left: 50px solid transparent; } .triangle-bottomleft { width: 0; height: 0; border-left: 50px solid #669; border-top: 50px solid transparent; } .triangle-bottomright { width: 0; height: 0; border-right: 50px solid #669; border-top: 50px solid transparent; } .one { width: 0; height: 0; border-top: 25px solid #669; border-right: 25px solid transparent; border-bottom: 25px solid #669; border-left: 25px solid #669; } .two { width: 0; height: 0; border-top: 25px solid #669; border-right: 25px solid transparent; border-bottom: 25px solid #669; } .three { width: 0; height: 0; border-top: 50px solid #669; border-right: 50px solid transparent; border-left: 50px solid #669; } .four { display: inline-block; border-width: 25px; border-style: solid; border-color: antiquewhite burlywood lightblue lightsalmon; } .solid-ring { width: 50px; height: 50px; border-radius: 999px; background-color: #669; } .circle-circle { width: 50px; height: 50px; border-radius: 999px; background-color: #fff; border: 10px solid #669; } .circle-top { border-radius: 999px 999px 0 0; border-top: 25px solid #669; width: 50px; } .circle-bottom { border-radius: 0 0 999px 999px; border-bottom: 25px solid #669; width: 50px; } .circle-left { width: 25px; border-bottom: 25px solid #669; border-top: 25px solid #669; border-radius: 999px 0 0 999px; } .circle-right { width: 25px; border-bottom: 25px solid #669; border-top: 25px solid #669; border-radius: 0 999px 999px 0; } .circle-top-left { display: inline-block; border: 25px solid #669; border-top-left-radius: 999px; } .circle-top-right { display: inline-block; border: 25px solid #669; border-top-right-radius: 999px; } .circle-bottom-left { display: inline-block; border: 25px solid #669; border-bottom-left-radius: 999px; } .circle-bottom-right { display: inline-block; border: 25px solid #669; border-bottom-right-radius: 999px; } .u { width: 50px; border: 1px solid #669; border-radius: 0 0 999px 999px; height: 25px; } #cut-diamond { border-style: solid; border-color: transparent transparent #669 transparent; border-width: 8px 15px 20px 15px; height: 0; width: 50px; position: relative; margin-bottom: 24px; } #cut-diamond:after { content: \"\"; position: absolute; top: 19px; left: -15px; width: 0; height: 0; border-style: solid; border-color: #669 transparent transparent transparent; border-width: 35px 25px 0 25px; } .egg { width: 35px; height: 50px; background-color: #669; border-radius: 50% 50% 50% 50% / 60% 60% 40% 40%; } #infinity { position: relative; width: 104px; height: 50px; } #infinity:before, #infinity:after { content: \"\"; position: absolute; top: 0; left: 0; width: 50px; height: 50px; border: 11px solid #669; border-radius: 50px 50px 0 50px; transform: rotate(-45deg); } #infinity:after { left: auto; right: 0; border-radius: 50px 50px 50px 0; transform: rotate(45deg); } .heart { position: relative; width: 50px; height: 50px; } .heart:before, .heart:after { position: absolute; content: \"\"; left: 0px; top: 0; width: 30px; height: 50px; background-color: #669; border-radius: 999px 999px 0 0; transform: rotate(-45deg); } .heart:after { transform: rotate(45deg); left: 14px; } .star-five { display: inline-block; position: relative; border-right: 10px solid transparent; border-bottom: 25px solid #669; border-left: 10px solid transparent; margin-bottom: 34px; } .star-five:before, .star-five:after { position: absolute; content: \"\"; border-right: 25px solid #669; border-top: 35px solid transparent; border-bottom: 35px solid transparent; transform: rotate(54deg); left: -15px; top: -2px; } .star-five:after { content: \"\"; transform: rotate(125deg); top: -2px; left: -11px; } .tail-left-top { border: 0 solid transparent; border-top: 25px solid #669; border-radius: 55px 0 0 0; width: 55px; height: 50px; } .tail-right-top { width: 55px; height: 50px; border: 0 solid transparent; border-top: 25px solid #669; border-radius: 0 55px 0 0; } .tail-left-bottom { width: 55px; height: 50px; border: 0 solid transparent; border-bottom: 25px solid #669; border-radius: 0 0 0 55px; } .tail-right-bottom { width: 55px; height: 50px; border: 0 solid transparent; border-bottom: 25px solid #669; border-radius: 0 0 55px 0; } .talk-box { width: 100px; height: 50px; border-radius: 6px; background-color: #669; position: relative; margin-left: 49px; } .talk-box:after { content: \"\"; position: absolute; border: 0 solid transparent; width: 27px; height: 40px; bottom: -21px; left: -26px; border-top: 15px solid #669; border-radius: 55px 0 0 0; } .tips { position: relative; width: 120px; height: 46px; background-color: #fff; border: 1px solid #669; border-radius: 6px; padding: 2px; text-align: center; } .tips:before { content: \"\"; position: absolute; left: -15px; top: 17px; border-top: 7px solid transparent; border-bottom: 7px solid transparent; border-right: 15px solid #669; } .tips:after { content: \"\"; position: absolute; left: -13px; top: 18px; border-top: 6px solid transparent; border-bottom: 6px solid transparent; border-right: 13px solid #fff; } pre { background-color: #eee!important; border: none!important; text-shadow: none!important; border-radius: 4px!important; padding: 15px!important; } .mt10 { margin-top: 20px; } .mb30 { margin-bottom: 30px; } .mb50 { margin-bottom: 50px; } .ml20 { margin-left: 20px; } 早前学习css3的练习,通过纯css实现基本的图形,熟悉css的属性应用。今天抽空整理出来,分享给想要学习css的同学。 .rectangle { width: 100px; height: 80px; background-color: #669; } .trapezoid { border-bottom: 50px solid #669; border-left: 25px solid transparent; border-right: 25px solid transparent; width: 80px; } .parallelogram { width: 80px; height: 50px; -webkit-transform: skew(-20deg); -moz-transform: skew(-20deg); -o-transform: skew(-20deg); background: #669; } .triangle-up { display: inline-block; border-width: 0px 30px 50px 30px; border-color: transparent transparent #669 transparent; border-style: solid; } .triangle-bottom { border-width: 50px 30px 0px 30px; border-color: #669 transparent transparent transparent; border-style: solid; } .triangle-left { display: inline-block; border-width: 30px 50px 30px 0px; border-color: transparent #669 transparent transparent; border-style: solid; } .triangle-right { display: inline-block; border-width: 30px 0px 30px 50px; border-color: transparent transparent transparent #669; border-style: solid; } .triangle-updown { width: 0; height: 0; border-left: 46px solid transparent; border-right: 46px solid transparent; border-bottom: 60px solid #669; position: relative; } .triangle-updown:after { content: \" \"; width: 0; height: 0; border-left: 46px solid transparent; border-right: 46px solid transparent; border-top: 60px solid #669; position: absolute; top: 20px; left: -45px; } .triangle-topleft { width: 0; height: 0; border-top: 50px solid #669; border-right: 50px solid transparent; } .triangle-topright { width: 0; height: 0; border-top: 50px solid #669; border-left: 50px solid transparent; } .triangle-bottomleft { width: 0; height: 0; border-left: 50px solid #669; border-top: 50px solid transparent; } .triangle-bottomright { width: 0; height: 0; border-right: 50px solid #669; border-top: 50px solid transparent; } .one { width: 0; height: 0; border-top: 25px solid #669; border-right: 25px solid transparent; border-bottom: 25px solid #669; border-left: 25px solid #669; } .two { width: 0; height: 0; border-top: 25px solid #669; border-right: 25px solid transparent; border-bottom: 25px solid #669; } .three { width: 0; height: 0; border-top: 50px solid #669; border-right: 50px solid transparent; border-left: 50px solid #669; } .four { display: inline-block; border-width: 25px; border-style: solid; border-color: antiquewhite burlywood lightblue lightsalmon; } .solid-ring { width: 50px; height: 50px; border-radius: 999px; background-color: #669; } .circle-circle { width: 50px; height: 50px; border-radius: 999px; background-color: #fff; border: 10px solid #669; } .circle-top { border-radius: 999px 999px 0 0; border-top: 25px solid #669; width: 50px; } .circle-bottom { border-radius: 0 0 999px 999px; border-bottom: 25px solid #669; width: 50px; } .circle-left { width: 25px; border-bottom: 25px solid #669; border-top: 25px solid #669; border-radius: 999px 0 0 999px; } .circle-right { width: 25px; border-bottom: 25px solid #669; border-top: 25px solid #669; border-radius: 0 999px 999px 0; } .circle-top-left { display: inline-block; border: 25px solid #669; border-top-left-radius: 999px; } .circle-top-right { display: inline-block; border: 25px solid #669; border-top-right-radius: 999px; } .circle-bottom-left { display: inline-block; border: 25px solid #669; border-bottom-left-radius: 999px; } .circle-bottom-right { display: inline-block; border: 25px solid #669; border-bottom-right-radius: 999px; } .u { width: 50px; border: 1px solid #669; border-radius: 0 0 999px 999px; height: 25px; } #cut-diamond { border-style: solid; border-color: transparent transparent #669 transparent; border-width: 8px 15px 20px 15px; height: 0; width: 50px; position: relative; margin-bottom: 24px; } #cut-diamond:after { content: \"\"; position: absolute; top: 19px; left: -15px; width: 0; height: 0; border-style: solid; border-color: #669 transparent transparent transparent; border-width: 35px 25px 0 25px; } .egg { width: 35px; height: 50px; background-color: #669; border-radius: 50% 50% 50% 50% / 60% 60% 40% 40%; } #infinity { position: relative; width: 104px; height: 50px; } #infinity:before, #infinity:after { content: \"\"; position: absolute; top: 0; left: 0; width: 50px; height: 50px; border: 11px solid #669; border-radius: 50px 50px 0 50px; transform: rotate(-45deg); } #infinity:after { left: auto; right: 0; border-radius: 50px 50px 50px 0; transform: rotate(45deg); } .heart { position: relative; width: 50px; height: 50px; } .heart:before, .heart:after { position: absolute; content: \"\"; left: 0px; top: 0; width: 30px; height: 50px; background-color: #669; border-radius: 999px 999px 0 0; transform: rotate(-45deg); } .heart:after { transform: rotate(45deg); left: 14px; } .star-five { display: inline-block; position: relative; border-right: 10px solid transparent; border-bottom: 25px solid #669; border-left: 10px solid transparent; margin-bottom: 34px; } .star-five:before, .star-five:after { position: absolute; content: \"\"; border-right: 25px solid #669; border-top: 35px solid transparent; border-bottom: 35px solid transparent; transform: rotate(54deg); left: -15px; top: -2px; } .star-five:after { content: \"\"; transform: rotate(125deg); top: -2px; left: -11px; } .tail-left-top { border: 0 solid transparent; border-top: 25px solid #669; border-radius: 55px 0 0 0; width: 55px; height: 50px; } .tail-right-top { width: 55px; height: 50px; border: 0 solid transparent; border-top: 25px solid #669; border-radius: 0 55px 0 0; } .tail-left-bottom { width: 55px; height: 50px; border: 0 solid transparent; border-bottom: 25px solid #669; border-radius: 0 0 0 55px; } .tail-right-bottom { width: 55px; height: 50px; border: 0 solid transparent; border-bottom: 25px solid #669; border-radius: 0 0 55px 0; } .talk-box { width: 100px; height: 50px; border-radius: 6px; background-color: #669; position: relative; margin-left: 49px; } .talk-box:after { content: \"\"; position: absolute; border: 0 solid transparent; width: 27px; height: 40px; bottom: -21px; left: -26px; border-top: 15px solid #669; border-radius: 55px 0 0 0; } luojh.me .tips { position: relative; width: 120px; height: 46px; background-color: #fff; border: 1px solid #669; border-radius: 6px; padding: 2px; text-align: center; } .tips:before { content: \"\"; position: absolute; left: -15px; top: 17px; border-top: 7px solid transparent; border-bottom: 7px solid transparent; border-right: 15px solid #669; } .tips:after { content: \"\"; position: absolute; left: -13px; top: 18px; border-top: 6px solid transparent; border-bottom: 6px solid transparent; border-right: 13px solid #fff; } 一生最重 不过饱餐与被爱","tags":[{"name":"css3","slug":"css3","permalink":"http://www.luojh.me/tags/css3/"}]}]